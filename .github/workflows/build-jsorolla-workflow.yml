name: "Reusable workflow to build JSorolla"

on:
  workflow_call:
    outputs:
      version:
        description: "JSorolla version"
        value: ${{ jobs.build-jsorolla-workflow.outputs.version }}

jobs:
  build-jsorolla-workflow:
    name: Build JSorolla
    runs-on: ubuntu-20.04
    outputs:
      version: ${{ steps.package.outputs.version }}
    steps:
      - name: "Checkout JSorolla"
        uses: actions/checkout@v3
#      - name: "Checkout private custom sites repo inside JSorolla"
#        uses: actions/checkout@v2
#        if: ${{ github.repository != 'opencb/jsorolla' }}
#        with:
#          repository: ${{ secrets.JSOROLLA_CUSTOM_SITES_REPOSITORY }}
#          path: custom-sites
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
      - uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: npm install
      - run: npm run build
      - id: package
        uses: tyankatsu0105/read-package-version-actions@v1
      - uses: actions/upload-artifact@v3
        with:
#          name: jsorolla-build
          name: build-folder
          path: build
          retention-days: 1
      - uses: actions/upload-artifact@v3
        with:
          name: jsorolla-release
          # TODO: we should rename the iva-VERSION.tar.gz file as jsorolla-VERSION.tar.gz
          path: iva-${{ steps.package.outputs.version }}.tar.gz
          retention-days: 1
