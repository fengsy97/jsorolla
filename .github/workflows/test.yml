name: Build and test the project
on:
  workflow_call:
    secrets:
      SONAR_TOKEN:
        required: true
      SSH_TESTING_SERVER_HOST:
        required: true
      SSH_TESTING_SERVER_PORT:
        required: true
      SSH_TESTING_SERVER_USER:
        required: true
      SSH_TESTING_SERVER_PASSWORD:
        required: true

env:
  xb_version: "1.5.0"

jobs:
  test:
    name: Test and push Sonar analysis
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
      - uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: npm install
#      - name: Test
#        run: npm run test:run
      - uses: cypress-io/github-action@v5
        with:
          spec: cypress/e2e/commons/*.js
          browser: chrome
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
      # Test run video was always captured, so this action uses "always()" condition
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: workdir
          path: |
            "cypress/reports"
            "cypress/screenshots"
            "cypress/videos"
#      - name: Upload result dir
#        uses: actions/upload-artifact@v3
#        with:
#          name: workdir
#          path: |
#            "cypress/reports"
#            "cypress/screenshots"
#            "cypress/videos"

  publish-test:
    name: Publish test results
    runs-on: ubuntu-22.04
    needs: test
    strategy:
      matrix:
        module: [ "cypress/reports","cypress/screenshots","cypress/videos" ]
    steps:
      - name: Download result dir
        uses: actions/download-artifact@v3
        with:
          name: workdir
      - name: Deploy unit tests web recursively to remote
        uses: garygrossgarten/github-action-scp@release
        with:
          local: ${{ matrix.module }}/target/site
          remote: /var/www/html/reports/development/${{ env.xb_version }}/${{ github.ref_name }}/jsorolla/${{ github.sha }}/unit/${{ matrix.module }}
          host: ${{ secrets.SSH_TESTING_SERVER_HOST}}
          port: ${{ secrets.SSH_TESTING_SERVER_PORT}}
          username: ${{ secrets.SSH_TESTING_SERVER_USER }}
          password: ${{ secrets.SSH_TESTING_SERVER_PASSWORD }}
          concurrency: 2
